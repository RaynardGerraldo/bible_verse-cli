#!/bin/sh

# Help menu
if [ "$1" = "-h" -o "$1" = "--help" ]; then
  echo "Usage: ./bible_verse book_name chapter verse [version]"
  echo "Example: 
  	./bible_verse John 3 16 KJV (ESV by default)
  	./bible_verse John 3 16-21 KJV"
  echo "For output to image
  	./bible_verse John 3 16 KJV | python3 verseonimage.py
  	./bible_verse John 3 16-21 KJV | python3 verseonimage.py
	./bible_verse John 3 16-21 NKJV | python3 versetoimage.py <your image.png>"
  exit 0
fi

if [ $# -lt 3 ]; then
  echo "Error: Incorrect number of arguments."
  exit 1
fi

# Sets default version ahead and prepares variable for ranging verses
version="ESV"
verse_range=$(printf "%s" "$3" | grep -oE "[0-9]+-[0-9]+")

# Use as version if version argument exist
if [ $# -eq 4 ]; then
  version=$4
fi

# Prints book name,chapter,verse,and version
printf "%s\n" "$1 $2 $3 $version"

# Request to biblegateway and parse response
request_and_parse(){
	bible=$(curl -s "https://www.biblegateway.com/passage/?search=$1+$2:$3&version=$4")
	verse_text=$(printf "%s" "$bible" | sed -n 's/.*<meta property="og:description" content="\(.*\)".*/\1/p')
	printf "%s\n" "$verse_text"
}

# Checks and adjustments for a certain scraping block
if [ -n "$verse_range" ]; then
	number1=$(printf "%s" "$verse_range" | cut -d'-' -f1)
	number2=$(printf "%s" "$verse_range" | cut -d'-' -f2)
	range_count=$((number2 - number1))
	if [ $range_count -ge 5 ];then 
		first_range=$number1-$((number1+4))
		second_range=$((number1+5))-$number2
		first_part=$(request_and_parse "$1" "$2" "$first_range" "$version")
		second_part=$(request_and_parse "$1" "$2" "$second_range" "$version")
		merged="${first_part} ${second_part}"
		printf "%s\n" "$merged"
		exit 0
	fi
fi
request_and_parse "$1" "$2" "$3" "$version"
